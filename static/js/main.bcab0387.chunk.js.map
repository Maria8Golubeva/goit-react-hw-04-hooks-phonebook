{"version":3,"sources":["Components/Filter/styles.module.css","Components/ContactsList/styles.module.css","Components/ContactsList/ContactsList.js","Components/Form/Form.js","Components/Filter/Filter.js","Components/ContactsList/ListItem/ListItem.js","App.js","index.js","Components/Form/styles.module.css","Components/ContactsList/ListItem/styles.module.css"],"names":["module","exports","ConctactsList","children","className","styles","contactsList","Form","sendData","useState","name","setName","number","setNumber","inputHandler","evt","target","value","formReset","IdName","shortid","generate","IdNumber","onSubmit","preventDefault","formLabel","htmlFor","id","formInput","type","pattern","title","onChange","required","submitBtn","Filter","inputId","filterLabel","filterInput","defaultProps","ListItem","contacts","onClick","map","item","listItem","itemText","deleteBtn","App","setContacts","filter","setFilter","useEffect","localStorage","contactsFromLocalStorage","JSON","parse","getItem","setItem","stringify","filtredContacts","toLowerCase","includes","data","find","alert","newContact","prev","ContactsList","newContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcab0387.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"styles_filterLabel__h8G3F\",\"filterInput\":\"styles_filterInput__1g5j1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"styles_contactsList__3G5lL\"};","import PropTypes from \"prop-types\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nfunction ConctactsList({ children }) {\r\n  return <ul className={styles.contactsList}>{children}</ul>;\r\n}\r\n\r\nConctactsList.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default ConctactsList;","import { useState } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nfunction Form({ sendData }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const inputHandler = (evt) => {\r\n    switch (evt.target.name) {\r\n      case \"name\":\r\n        setName(evt.target.value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(evt.target.value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const submitHanlder = (evt) => {\r\n    evt.preventDefault();\r\n    sendData({ name, number });\r\n    formReset();\r\n  };\r\n\r\n  const formReset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const IdName = shortid.generate();\r\n  const IdNumber = shortid.generate();\r\n\r\n  return (\r\n    <form onSubmit={submitHanlder}>\r\n      <label className={styles.formLabel} htmlFor={IdName}>\r\n        Name\r\n        <input\r\n          id={IdName}\r\n          className={styles.formInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={inputHandler}\r\n          value={name}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label className={styles.formLabel} htmlFor={IdNumber}>\r\n        Number\r\n        <input\r\n          id={IdNumber}\r\n          className={styles.formInput}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={inputHandler}\r\n          value={number}\r\n          required\r\n        />\r\n      </label>\r\n      <button className={styles.submitBtn} type=\"submit\">\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  sendData: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;","import shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nfunction Filter({ onChange, value }) {\r\n  function changeHandler(evt) {\r\n    onChange(evt.target.value);\r\n  }\r\n\r\n  const inputId = shortid.generate();\r\n  return (\r\n    <label className={styles.filterLabel} htmlFor={inputId}>\r\n      Search\r\n      <input\r\n        id={inputId}\r\n        className={styles.filterInput}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={changeHandler}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.defaultProps = {\r\n  value: \"\",\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string,\r\n};\r\n\r\nexport default Filter;","import PropTypes from \"prop-types\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nfunction ListItem({ contacts, onClick }) {\r\n  return contacts.map((item) => (\r\n    <li className={styles.listItem} key={item.id}>\r\n      <p className={styles.itemText}>\r\n        {item.name}: {item.number}\r\n      </p>\r\n      <button\r\n        className={styles.deleteBtn}\r\n        type=\"button\"\r\n        onClick={() => onClick(item.id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  ));\r\n}\r\n\r\nListItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ListItem;","import { useState, useEffect } from \"react\";\r\nimport shortid from \"shortid\";\r\n\r\nimport ContactsList from \"./Components/ContactsList/ContactsList\";\r\nimport Form from \"./Components/Form\";\r\nimport Filter from \"./Components/Filter\";\r\nimport ListItem from \"./Components/ContactsList/ListItem\";\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.contacts) {\r\n      const contactsFromLocalStorage = JSON.parse(\r\n        localStorage.getItem(\"contacts\")\r\n      );\r\n      setContacts(contactsFromLocalStorage);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const FilterHandler = (value) => {\r\n    setFilter(value);\r\n  };\r\n\r\n  const addContact = (data) => {\r\n    const namesToLowerCase = contacts.map((item) => item.name.toLowerCase());\r\n    if (namesToLowerCase.find((item) => item === data.name.toLowerCase())) {\r\n      return alert(\"please change name\");\r\n    }\r\n\r\n    const newContact = {\r\n      id: shortid.generate(),\r\n      name: data.name,\r\n      number: data.number,\r\n    };\r\n    setContacts((prev) => [...prev, newContact]);\r\n  };\r\n\r\n  const deleteContact = (id) => {\r\n    const newContacts = contacts.filter((item) => item.id !== id);\r\n    setContacts(newContacts);\r\n  };\r\n\r\n  const filtredContacts = contacts.filter((item) =>\r\n    item.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Form sendData={addContact} />\r\n      <Filter onChange={FilterHandler} value={filter} />\r\n      <ContactsList>\r\n        <ListItem contacts={filtredContacts} onClick={deleteContact} />\r\n      </ContactsList>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"modern-normalize\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"styles_submitBtn__14ji9\",\"formLabel\":\"styles_formLabel__1peuN\",\"formInput\":\"styles_formInput__2UuCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"styles_listItem__dsv5a\",\"itemText\":\"styles_itemText__1DKSl\",\"deleteBtn\":\"styles_deleteBtn__1TEkP\"};"],"sourceRoot":""}